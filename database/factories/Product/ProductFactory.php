<?php

namespace Database\Factories\Product;

use App\Models\Product\Product;
use App\Models\Product\ProductFlat;
use Illuminate\Database\Eloquent\Factories\Factory;

/**
 * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\Product\Product>
 */
class ProductFactory extends Factory
{
    /**
     * Define the model's default state.
     *
     * @return array<string, mixed>
     */
    public function definition(): array
    {
        return [
            'sku' => $this->faker->unique()->word,
            'type' => Product::SIMPLE,
            'name' => $productName = $this->faker->unique()->word,
            'url_key' => $productName . '_' . $this->faker->unique()->word,
            'status' => Product::PUBLISHED,
            'base_price' => $basePrice = $this->faker->numberBetween(100, 900),
            'commission_percent' => $commission = config('cloudcom.defaults.commission_percent',0),
            'commission_amount' => $commissionAmount = $basePrice * $commission / 100,
            'price' => $basePrice + $commissionAmount,
            'attribute_group_id' => $this->faker->randomElement([5, 6]),
            'quantity' => 0,
        ];
    }


    public function configure()
    {
        // Add Product Flat
        $this->afterMaking(function (Product $product){
            $product->flat()->create(ProductFlat::factory(1)->make());

        });
        return parent::configure(); // TODO: Change the autogenerated stub
    }


}
